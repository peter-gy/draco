export default function constraints2json(constraintsAsp, weightsAsp) {
    const constraints = constraintsAsp.match(CONSTRAINT_MATCH);
    if (!constraints) {
        throw Error('invalid constraints');
    }
    const result = constraints.map((s) => {
        const doc = getDoc(s);
        const asp = getAsp(s);
        return {
            ...doc,
            ...asp,
        };
    });
    if (weightsAsp) {
        const weights = weightsAsp.match(WEIGHTS_MATCH);
        const weightMap = getWeightMap(weights);
        if (!weights) {
            throw Error('invalid weights');
        }
        for (const constraint of result) {
            const name = constraint.name;
            constraint.weight = weightMap[name];
        }
    }
    return result;
}
function getDoc(s) {
    const docMatch = s.match(DOC_MATCH);
    if (docMatch) {
        const docString = docMatch[0];
        const descriptionParts = DESCRIPTION_EXTRACT.exec(docString);
        if (descriptionParts) {
            return {
                description: descriptionParts[1],
            };
        }
    }
    return null;
}
function getAsp(s) {
    const aspMatch = s.match(ASP_MATCH);
    if (aspMatch) {
        const asp = aspMatch.join('\n');
        const typeExtract = TYPE_EXTRACT.exec(asp);
        if (!typeExtract) {
            throw Error(`invalid asp: ${asp}`);
        }
        const type = typeExtract[1];
        const nameExtract = NAME_EXTRACT.exec(asp);
        if (!nameExtract) {
            throw Error(`invalid asp: ${asp}`);
        }
        const name = nameExtract[1];
        return {
            type,
            name,
            asp,
        };
    }
    return null;
}
function getWeightMap(weights) {
    const map = {};
    for (const weight of weights) {
        const nameExtract = WEIGHT_NAME_EXTRACT.exec(weight);
        if (!nameExtract) {
            throw Error(`invalid weight: ${weight}`);
        }
        const name = nameExtract[1];
        const valueExtract = WEIGHT_VALUE_EXTRACT.exec(weight);
        if (!valueExtract) {
            throw Error(`invalid weight: ${weight}`);
        }
        const value = +valueExtract[1];
        map[name] = value;
    }
    return map;
}
const CONSTRAINT_MATCH = /%\s*@constraint(?:(.+)\n)+/g;
const DOC_MATCH = /(%.*\n)+/g;
const DESCRIPTION_EXTRACT = /@constraint\s+(.*)/;
const ASP_MATCH = /^[^%].*/gm;
const TYPE_EXTRACT = /(\w+)\(/;
const NAME_EXTRACT = /\((\w+),?.*?\)/;
const WEIGHTS_MATCH = /#const.*/g;
const WEIGHT_NAME_EXTRACT = /#const\s+(\w+?)_weight/;
const WEIGHT_VALUE_EXTRACT = /=\s*(\d+)/;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RyYWludHMyanNvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25zdHJhaW50czJqc29uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWNBLE1BQU0sQ0FBQyxPQUFPLFVBQVUsZ0JBQWdCLENBQUMsY0FBc0IsRUFBRSxVQUFtQjtJQUNsRixNQUFNLFdBQVcsR0FBRyxjQUFjLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDM0QsSUFBSSxDQUFDLFdBQVcsRUFBRTtRQUNoQixNQUFNLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0tBQ3BDO0lBRUQsTUFBTSxNQUFNLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQVMsRUFBYyxFQUFFO1FBQ3ZELE1BQU0sR0FBRyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0QixNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEIsT0FBTztZQUNMLEdBQUcsR0FBRztZQUNOLEdBQUcsR0FBRztTQUNQLENBQUM7SUFDSixDQUFDLENBQUMsQ0FBQztJQUVILElBQUksVUFBVSxFQUFFO1FBQ2QsTUFBTSxPQUFPLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNoRCxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFeEMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNaLE1BQU0sS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7U0FDaEM7UUFFRCxLQUFLLE1BQU0sVUFBVSxJQUFJLE1BQU0sRUFBRTtZQUMvQixNQUFNLElBQUksR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDO1lBQzdCLFVBQVUsQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3JDO0tBQ0Y7SUFFRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQsU0FBUyxNQUFN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